#+TITLE: Pasteboard Architecture
#+DATE: 2025-09-24
#+DESCRIPTION: Deep dive into the macOS pasteboard helpers that back clean pasting.

* Overview
- Copy entry points: `pasteboard-copy-adaptive`, `pasteboard-copy-verbatim`, and `pasteboard-copy-and-replace-em-dashes-in-clipboard` (default text-mode cleaner).
- Paste entry points: `pasteboard-paste`, `pasteboard-paste-clean`, `pasteboard-paste-verbatim` (`pasteboard-paste-raw` alias), and `pasteboard-paste-adjusted-subtrees`.
- Goal: Move text from macOS apps into Org buffers while normalizing typography, Markdown, and Org semantics.

* Evolution History
- Early version just called `shell-command-on-region` with `pbpaste`.
- Added multi-stage cleaners (`replace-smart-quotes`, markdown converters) to support blogging and knowledge-base workflows.
- 2025-09-24 regression fix: table separator protection via smarter `normalize-dashes`.
- 2025-09-24 regression fix: emoji joiner preservation inside `replace-weird-spaces`.
- 2025-10-05 critical fix: markdown bold `**text**` → org bold `*text*` conversion order and heading detection.

* Current Implementation Details
- `pasteboard--clean-string` processes text in this order (ORDER MATTERS):
  1. `convert-markdown-headings-to-org` - MUST run first before asterisk processing
  2. `replace-smart-quotes` - Converts markdown bold `**` → org bold `*`, smart quotes, etc.
  3. `replace-smart-quotes-regexp`
  4. `replace-weird-spaces`
  5. `convert-markdown-blockquotes-to-org`
  6. `convert-markdown-links-to-org-mode`
  7. Narrowed pass: `asterisk-to-dash-and-convert-code-blocks-to-org` (if available)
- `normalize-dashes` (in `shared-functions`) now skips lines that look like Markdown tables.
- Raw helpers wrap `pbpaste` with `perl -p -e 's/\r$//'` and `tr` to remove carriage returns.

* Performance and Reliability Considerations
- Cleaning runs in-buffer; large pastes pay the cost per regex pass—acceptable for short articles but consider profiling if >5k lines.
- Use markers to avoid mis-calculating the end point when cleaners change text length.
- Failure cases usually stem from outside dependencies (`pbpaste`, shell pipeline). Keep Terminal permissions granted under System Preferences → Security & Privacy → Accessibility.

* Critical Distinctions: Markdown Bold vs Org Headings

** The Desiderata
When processing text that could be markdown or org-mode, the system MUST distinguish between:
- **Markdown bold text**: `**The Future Is Now**` - text surrounded by double asterisks
- **Org headings**: `** Heading Text` - asterisks followed by SPACE then text
- **Org bold text**: `*The Future Is Now*` - text surrounded by single asterisks

** Expected Behavior
Given this markdown input:
#+BEGIN_EXAMPLE
**The Future Is Now**

When we think about the future...
#+END_EXAMPLE

The system MUST:
1. Convert `**The Future Is Now**` → `*The Future Is Now*` (markdown bold to org bold)
2. NOT treat it as an org heading (even though it starts with `**`)
3. NOT demote it when in org-roam buffers
4. Result in: `*The Future Is Now*` as bold text, not a heading

** Implementation Requirements
All functions that detect org headings MUST use the pattern `^\\*+ ` (with space) not just `^\\*+`:
- ✓ Correct: `(re-search-forward "^\\(\\*+\\) " ...)` - only matches actual headings
- ✗ Wrong: `(re-search-forward "^\\(\\*+\\)" ...)` - incorrectly matches bold text at line start

** Test Cases
The pasteboard system must handle these correctly:
| Input (Markdown)           | Output (Org)              | Type           |
|---------------------------+---------------------------+----------------|
| `## Heading`              | `** Heading`              | Heading        |
| `## **Bold Heading**`     | `** *Bold Heading*`       | Heading + Bold |
| `**Bold at line start**`  | `*Bold at line start*`    | Bold only      |
| `Regular **bold** text`   | `Regular *bold* text`     | Inline bold    |

* Lessons Learned
- Treat each sanitizer as a suspect when formats break; add fixtures before altering their logic.
- Keep macOS-specific shell invocations isolated so Linux builds can fall back to `xclip` in the future.
- Update `/docs/instructions.org` whenever key bindings or cleaner order changes to prevent drift.
- See `/docs/codebase-wisdom.org` for detailed debugging post-mortems on markdown conversion and emoji handling issues.
